---
title: Learn
responsive: true
---

<% content_for :outside_wrapper do %>
<div class="legal-wrapper">
  <img class="learning-tomster" src="/images/tomsters/teaching-reverse.png" alt="Teaching Tomster" class="learning-tomster">

  <h1>Learning Ember.js</h1>

  <p>Are you getting started on your Ember.js adventure? Check out our official reading material: </p>

  <ul>
    <li><strong>Quick start</strong> <a href="https://guides.emberjs.com/v2.9.0/getting-started/quick-start/"><i class="icon-link-ext"></i></a>: An easy breezy introduction to the framework.</li>
    <li><strong>Tutorial</strong> <a href="https://guides.emberjs.com/v2.5.0/tutorial/ember-cli/"><i class="icon-link-ext"></i></a>: Follow our tutorial to build, and deploy, your first Ember.js application!</li>
    <li><strong>Guides</strong> <a href="https://guides.emberjs.com/"><i class="icon-link-ext"></i></a>: Whether you're just getting started and want to get familiar with Ember, or you're looking to refresh your knowledge on a certain feature, the Guides are the place for you.</li>
  </ul>

  <h1>API Reference</h1>

  <p>
    Explore the available API of the various Ember ecosystem libraries. This is where you want to go to read in details about the various features, including example code.
  </p>

  <ul class="api-reference-list">
    <li><a href="http://emberjs.com/api/">
      <img src="/images/learn/ember.png" class="project-logo" alt="Ember">
    </a></li>
    <li><a href="http://emberjs.com/api/data/">
      <img src="/images/learn/ember-data.png" class="project-logo" alt="Ember Data">
    </a></li>
    <li><a href="http://ember-cli.com/api/">
      <img src="/images/learn/ember-cli.png" class="project-logo" alt="Ember CLI">
    </a></li>
  </ul>

  <h1>Ecosystem</h1>

  <p>
    One of the main strengths of Ember is how shared conventions enable developers to build on top of each other's work and improve the ecosystem for everyone. What follows are some of the projects more closely maintained by the several Ember teams.
  </p>

  <p>
    <strong>Ember CLI</strong>: The official command line toolkit to develop Ember applications. Check out the <a href="https://ember-cli.com/user-guide/">User Guide</a>, and the documentation on how to <a href="https://ember-cli.com/extending/">extend Ember CLI</a> as an addon developer.
  </p>

  <p><strong>Ember Inspector</strong>: A browser plugin/bookmarklet that helps you inspect and debug applications. Learn how best to use it in the <a href="https://guides.emberjs.com/v2.6.0/ember-inspector/installation/">Ember Inspector Guides</a>.</p>

  <p><strong>Liquid Fire</strong>: A toolkit to add animations and transitions to your application. Check out their <a href="http://ember-animation.github.io/liquid-fire/">interactive documentation</a>.</p>

  <p><strong>Ember Twiddle</strong>: Online code editor so you can share working snippets of code or reproductions of bugs. Try it out <a href="http://ember-twiddle.com/">today</a>!</p>

  <p><strong>FastBoot</strong>: Server-side rendering library for Ember applications. Check out the <a href="http://www.ember-fastboot.com/quickstart">Quickstart</a> to get up and running, and the <a href="http://www.ember-fastboot.com/docs/user-guide">User Guide</a> for more detailed information.
  </p>

  <h1 id="faq">Frequently Asked Questions</h1>

  <h3 id="faq-future-proof">How do I future-proof my Ember.js application?</h3>

  <p>
    Ember.js has a strong emphasis on <a href="https://speakerdeck.com/wycats/stability-without-stagnation-lessons-learned-from-shipping-ember-dot-js">Stability without Stagnation</a>, which means that framework developers take great care when designing new functionality to make sure it fits with the existing functionalities, and provides a path forward for users to upgrade without being subjected to churn.
  </p>

  <p>
    Ember.js also follow a community-driven process for its development that incorporates <a href="https://github.com/emberjs/rfcs">RFCs for features and deprecations</a> and a <a href="/builds">six-week "train release schedule"</a>.
    Every six weeks, candidate features are reviewed and either deemed ready to be included in the stable release, or carry on in beta for another cycle until the next release happens.
  </p>

  <p>
    In short, the best way to make sure you have a healthy application is to keep an eye on RFCs &mdash; remembering they document intent but not necessarily the final implementation, &mdash; keep your application clean of deprecations, and when possible test your application against beta and canary.
  </p>
</div>
<% end %>
